[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2024-10-31 10:14:06.735167",
  "module": "Law Firm",
  "name": "titlecase",
  "script": "function toTitleCase(str) {\n    return str.replace(/\\w\\S*/g, function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n}\n\nfrappe.ui.form.on('Item', {\n    refresh(frm) {\n        cur_frm.fields_dict['item_name'].df.onchange = function() {\n            cur_frm.doc.item_name = cur_frm.doc.item_name.toUpperCase();\n            cur_frm.refresh_field('item_name');\n        };\n    }\n    // before_save(frm) {\n    //           // frm.doc.item_name = toTitleCase(frm.doc.item_name);\n    // }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 0,
  "modified": "2024-10-31 10:14:16.445743",
  "module": "Law Firm",
  "name": "Filter Matter",
  "script": "frappe.ui.form.on('Timesheet', {\n\trefresh(frm) {\n\tcur_frm.fields_dict.custom_matter.get_query = function(doc,cdt,cdn) {\n\t\treturn {\n\t\t\tfilters:[\n\t\t\t\t['client', '=',frm.doc.customer],\n\t\t\t\t['docstatus', '=',1]\n\t\t\t]\n\t\t}\n\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Project",
  "enabled": 1,
  "modified": "2024-11-03 10:03:11.370335",
  "module": "Law Firm",
  "name": "Matter Naming Series",
  "script": "frappe.ui.form.on('Project', {\n\n    refresh(frm){\n        cur_frm.dashboard.hide()\n        \n             $('div[data-doctype=\"Material Request\"]').hide();\n             $('div[data-doctype=\"BOM\"]').hide();\n             $('div[data-doctype=\"Stock Entry\"]').hide();\n           $('.form-link-title').filter(function() {\n                return $(this).text().trim() === 'Material';\n            }).hide();\n            \n             \n        //   $('.section-head').filter(function() {\n        //         return $(this).text().trim() === 'Connections';\n        //     }).hide();\n      \n        \n            \n\t frm.set_query(\"cost_center\", function () {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\tis_group: [\"=\", 0],\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\t\t frm.set_query(\"custom_lawyer\", function () {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\tdepartment: [\"=\", 'Law - LFSH'],\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n    },\n    customer(frm){\n                frm.set_value('custom_paying_client', frm.doc.customer);\n    },\n    before_save: function(frm) {\n        // Get the first letter of the branch\n        let branch_letter = frm.doc.cost_center ? frm.doc.cost_center.charAt(0).toUpperCase() : '';\n        // Get the client name\n        let client_name = frm.doc.customer ? frm.doc.customer : '';\n        \n        // Generate the sequence number\n if (frm.doc.naming_series) {\n\n                    let new_series = 'MT/'+`${client_name}/${branch_letter}`+'.###';\n                    frm.set_value('naming_series', new_series);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "LF Timesheet",
  "enabled": 1,
  "modified": "2024-11-02 13:12:25.577749",
  "module": "Law Firm",
  "name": "Setup",
  "script": "frappe.ui.form.on('LF Timesheet', {\r\n    refresh(frm) {\r\n   \r\n        // Any other logic you might need on refresh\r\n    },\r\n    setup: function (frm) {\r\n        frm.set_query(\"name1\", function () {\r\n            return {\r\n                filters: {\r\n                    department: [\"=\", \"Law - LFSH\"],\r\n                },\r\n            };\r\n        });\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('LF Timesheet Item', {\r\n\r\n    time: function(frm, cdt, cdn) {\r\n        let item = locals[cdt][cdn];\r\n        item.date = frm.doc.date;\r\n        item.name1 = frm.doc.name1;\r\n        calculate_amount(frm, cdt, cdn);\r\n        update_totals(frm);\r\n    },\r\n    rate: function(frm, cdt, cdn) {\r\n        let item = locals[cdt][cdn];\r\n        item.date = frm.doc.date;\r\n        item.name1 = frm.doc.name1;        \r\n        calculate_amount(frm, cdt, cdn);\r\n        update_totals(frm);\r\n    },\r\n    amount: function(frm, cdt, cdn) {\r\n        let item = locals[cdt][cdn];\r\n        item.date = frm.doc.date;\r\n        item.name1 = frm.doc.name1;        \r\n        update_totals(frm);\r\n    },\r\n    file_number:function(frm, cdt, cdn) {\r\n        let item = locals[cdt][cdn];\r\n\r\nfrappe.db.get_doc('Project', item.file_number).then(dn => {\r\n    let lawyerFound = false;\r\n\r\n    dn.custom_list.forEach(lr => {\r\n        if (lr.lawyer == frm.doc.name1) {\r\n            item.rate = lr.rate;\r\n            lawyerFound = true;\r\n        }\r\n    });\r\n\r\n    if (!lawyerFound) {\r\n        // Fetch the rate from Employee doctype\r\n        frappe.db.get_value('Employee', {'name': frm.doc.name1}, 'custom_lawyer_rate').then(response => {\r\n            const fetchedRate = response.message.custom_lawyer_rate || 0; // Set default rate to 0 if not found\r\n            \r\n            // Show a prompt to the user with the option to change the rate\r\n            frappe.prompt([\r\n                {\r\n                    label: 'Lawyer Rate',\r\n                    fieldname: 'lawyer_rate',\r\n                    fieldtype: 'Currency',\r\n                    default: fetchedRate,  // Show the fetched rate as default\r\n                    reqd: 1\r\n                }\r\n            ], (data) => {\r\n                // Use the user-entered rate, or the fetched rate if not changed\r\n                const rate = data.lawyer_rate;\r\n\r\n                item.rate = rate;\r\n\r\n                // Add the lawyer to the custom list with the rate\r\n                let newLawyer = {\r\n                    lawyer: frm.doc.name1,\r\n                    rate: rate // Use the user-provided rate or the fetched rate\r\n                };\r\n\r\n                dn.custom_list.push(newLawyer);\r\n\r\n                // Save the updated Project document\r\n                frappe.call({\r\n                    method: 'frappe.client.save',\r\n                    args: {\r\n                        doc: dn\r\n                    },\r\n                    callback: function(response) {\r\n                        frappe.msgprint('Lawyer added successfully with rate: ' + rate);\r\n                    }\r\n                });\r\n            }, 'Lawyer not found. Do you want to add this lawyer?', 'Add Lawyer');\r\n        });\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\tfrm.refresh_field('table_gaqs');\r\n       \r\n   \t\t\t\t\r\n    }\r\n});\r\n\r\nfunction calculate_amount(frm, cdt, cdn) {\r\n    let item = locals[cdt][cdn];\r\n    if (item.time && item.rate) {\r\n        item.amount = item.time * item.rate;\r\n\r\n        frm.refresh_field('table_gaqs');\r\n    }\r\n}\r\n\r\nfunction update_totals(frm) {\r\n    let total_hours = 0;\r\n    let total_amount = 0;\r\n\r\n    frm.doc.table_gaqs.forEach(function(item) {\r\n        total_hours += item.time || 0;\r\n        total_amount += item.amount || 0;\r\n    });\r\n\r\n    frm.set_value('total_hours', total_hours);\r\n    frm.set_value('total_amount', total_amount);\r\n    frm.refresh_field('total_hours');\r\n    frm.refresh_field('total_amount');\r\n}\r\n\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-31 10:13:41.107127",
  "module": "Law Firm",
  "name": "Fetch LF Timesheet",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n    onload: function(frm) {\r\n        frm.remove_custom_button(__('Fetch Timesheet'));\r\n        setTimeout(() => {\r\n            frm.remove_custom_button('Sales Order', 'Get Items From');\r\n            frm.remove_custom_button('Delivery Note', 'Get Items From');\r\n            frm.remove_custom_button('Quotation', 'Get Items From');\r\n        }, 10);\r\n    },\r\n    refresh: function(frm) {\r\n        frm.remove_custom_button(__('Fetch Timesheet'));\r\n        setTimeout(() => {\r\n            frm.remove_custom_button('Sales Order', 'Get Items From');\r\n            frm.remove_custom_button('Delivery Note', 'Get Items From');\r\n            frm.remove_custom_button('Quotation', 'Get Items From');\r\n        }, 10);\r\n        frm.add_custom_button(__(\"Fetch LF Timesheet\"), function () {\r\n            let d = new frappe.ui.Dialog({\r\n                title: __(\"Fetch LF Timesheet\"),\r\n                fields: [\r\n                    {\r\n                        label: __(\"From\"),\r\n                        fieldname: \"from_time\",\r\n                        fieldtype: \"Date\",\r\n                        reqd: 1,\r\n                    },\r\n                    {\r\n                        fieldtype: \"Column Break\",\r\n                        fieldname: \"col_break_1\",\r\n                    },\r\n                    {\r\n                        label: __(\"To\"),\r\n                        fieldname: \"to_time\",\r\n                        fieldtype: \"Date\",\r\n                        reqd: 1,\r\n                    },\r\n                    {\r\n                        label: __(\"Project\"),\r\n                        fieldname: \"project\",\r\n                        fieldtype: \"Link\",\r\n                        options: \"Project\",\r\n                        default: frm.doc.project,\r\n                    },\r\n                ],\r\n                primary_action: function () {\r\n                    const data = d.get_values();\r\n                    frm.events.fetch_lf_timesheet_data(frm, {\r\n                        from_time: data.from_time,\r\n                        to_time: data.to_time,\r\n                        project: data.project,\r\n                    });\r\n                    d.hide();\r\n                },\r\n                primary_action_label: __(\"Get LF Timesheets\"),\r\n            });\r\n           \r\n            d.show();\r\n        });\r\n    },\r\n    \r\n    fetch_lf_timesheet_data: function(frm, filters) {\r\n      \r\n        frm.doc.custom_timesheet_from = filters.from_time\r\n        frm.doc.custom_timesheet_upto = filters.to_time\r\n        cur_frm.refresh_field('custom_timesheet_from');\r\n        cur_frm.refresh_field('custom_timesheet_upto');   \r\n        \r\n        frm.clear_table('custom_lf_timesheet');\r\n        frm.refresh_field('custom_lf_timesheet');\r\n\r\n        frappe.call({\r\n            method: 'frappe.client.get_list',\r\n            args: {\r\n                doctype: 'LF Timesheet',\r\n                filters: {\r\n                    'date': ['between', [filters.from_time, filters.to_time]]\r\n                },\r\n                fields: ['name'] // Only get the names of LF Timesheets\r\n            },\r\n            callback: function(r) {\r\n               \r\n               \r\n                if (!r.exc && r.message) {\r\n                    let total_amount = 0; // Initialize total amount\r\n                  \r\n                    // Iterate through each LF Timesheet record\r\n                    let timesheet_count = r.message.length;\r\n                    let processed_timesheets = 0;\r\n\r\n                    r.message.forEach(function(timesheet) {\r\n                        frappe.call({\r\n                            method: 'frappe.client.get',\r\n                            args: {\r\n                                doctype: 'LF Timesheet',\r\n                                name: timesheet.name,\r\n                            },\r\n                            callback: function(res) {\r\n                                if (!res.exc) {\r\n                                    let lf_timesheet = res.message;\r\n                                    lf_timesheet.table_gaqs.forEach(function(item) {\r\n                                        if (item.file_number === filters.project && lf_timesheet.is_invoiced === 0 && item.is_invoiced === 0) {\r\n                                            let child = frm.add_child('custom_lf_timesheet');\r\n                                           \r\n                                            child.date = item.date;\r\n                                            child.name1 = item.name1;\r\n                                            child.file_number = item.file_number;\r\n                                            child.client = item.client;\r\n                                            child.matter = item.matter;\r\n                                            child.purticulars = item.purticulars;\r\n                                            child.time = item.time;\r\n                                            child.rate = item.rate;\r\n                                            child.amount = item.amount;\r\n                                            child.parent1 = lf_timesheet.name;\r\n                                            child.parent_item_ref = item.name;\r\n\r\n                                            total_amount += item.amount; // Add amount to the total\r\n                                        }\r\n                                    });\r\n\r\n                                    processed_timesheets++;\r\n\r\n                                    // If all timesheets have been processed, add the item to the Sales Invoice\r\n                                    if (processed_timesheets === timesheet_count) {\r\n                                        frm.refresh_field('custom_lf_timesheet');\r\n\r\n                                        // Add a single line item with the total amount\r\n                                        \r\n                                        // Check if 'LF' item exists\r\n                                        let lf_item_exists = false;\r\n                                        frm.doc.items.forEach(function(d, index) {\r\n                                            if (d.item_code === 'LF') {\r\n                                                lf_item_exists = true;\r\n                                                frm.get_field('items').grid.grid_rows[index].remove(); // Remove the existing LF item\r\n                                            }\r\n                                        });\r\n                                        \r\n                                        // Add the new 'LF' item\r\n                                        if (total_amount > 0){\r\n                                        if (!lf_item_exists || lf_item_exists) { // This will always add after removal\r\n                                            let item = frm.add_child('items');\r\n                                            item.item_code = 'LF';\r\n                                            item.item_name = 'Lawyer Fees - أتعاب المحاماة'; // Set Item Name\r\n                                            item.qty = 1;\r\n                                            item.rate = total_amount;\r\n                                            item.amount = total_amount;\r\n                                            item.uom = 'Nos'; // Set UOM\r\n                                            item.income_account = '4110 - Sales - LFSH'; // Set the income account\r\n                                        \r\n                                            frm.refresh_field('items');\r\n                                        } } else {\r\n                                            frappe.msgprint('All timesheet Invoiced. Nothing Added.')\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-11-03 09:53:28.207474",
  "module": "Law Firm",
  "name": "Filter based on selection",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n\tcur_frm.dashboard.hide()\n\t},\n\tcost_center(frm){\n        //Reset Project if Branch Changed.\n         frm.set_value('project', ''); \n\t},\n\tcustomer(frm){\n        //Reset Project if Customer Changed.\n        frm.set_value('project', ''); \n\t},\n\tcustom_invoice_customer(frm){\n        //Reset Project if Customer Changed.\n        frm.set_value('project', '');\n        frm.set_value('customer', frm.doc.custom_invoice_customer);\n\t},\n    project: function(frm) {\n        frm.set_query(\"project\", function() {\n            if (frm.doc.custom_invoice_customer && frm.doc.customer &&  frm.doc.cost_center) {\n                return {\n                    filters: {\n                       \tcost_center: [\"=\", frm.doc.cost_center],\n\t\t\t\t\t\tcustomer: [\"=\", frm.doc.custom_invoice_customer], \n                        // You can add additional filters here if needed\n                    }\n                };\n            } else {\n                // If cost_center is empty, show a message\n                frappe.msgprint(__('Please Select Client & Branch &  Before selecting Matter.'));\n                return { filters: [] }; // or return {} to show all customers\n            }\n        });\n    }\n\n})\n\nfrappe.ui.form.on('Sales Invoice LF Timesheet', {\n\trefresh(frm) {\n\t\n\t},\n\tcustom_lf_timesheet(cdt,cdn,frm){\n\t  console.log('modified')  \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 0,
  "modified": "2024-10-31 10:14:38.831500",
  "module": "Law Firm",
  "name": "Client Naming Series",
  "script": "frappe.ui.form.on('Customer', {\r\n    before_save: function(frm) {\r\n        if (frm.is_new()) {  \r\n            let new_series = frm.doc.custom_client_code;\r\n            console.log('New Series:', new_series);  // Debugging line\r\n\r\n            // Check if the new series is not empty\r\n            if (new_series) {\r\n                // Set the name using frappe.model.set_value\r\n                frappe.model.set_value(frm.doctype, frm.docname, '__newname', new_series);\r\n            } else {\r\n                frappe.msgprint(__('Custom Client Code cannot be empty.'));\r\n            }\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-14 11:48:17.456077",
  "module": "Law Firm",
  "name": "Update Timesheet After Invoice Submit",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n    after_save(frm) {\r\n        frm.doc.custom_lf_timesheet.forEach(function(timesheet) {\r\n            frappe.call({\r\n                method: 'frappe.client.get',\r\n                args: {\r\n                    doctype: 'LF Timesheet',\r\n                    name: timesheet.parent1  // Reference to the parent LF Timesheet record\r\n                },\r\n                callback: function(r) {\r\n                    if (r.message) {\r\n                        let lf_timesheet = r.message;\r\n                        \r\n                        // Iterate over child items to find the matching one\r\n                        lf_timesheet.table_gaqs.forEach(function(child) {\r\n                            if (child.name === timesheet.parent_item_ref) {\r\n                                child.is_invoiced = 1;  // Update the field\r\n                            }\r\n                        });\r\n\r\n                        // Save the updated LF Timesheet with changes in the child table\r\n                        frappe.call({\r\n                            method: 'frappe.client.save',\r\n                            args: {\r\n                                doc: lf_timesheet\r\n                            },\r\n                            callback: function(save_response) {\r\n                                if (save_response.message) {\r\n                                    console.log(`Updated is_invoiced for ${timesheet.parent_item_ref}`);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-11-03 09:50:40.065988",
  "module": "Law Firm",
  "name": "Hide Dashboard",
  "script": "frappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t\tcur_frm.dashboard.hide()\n\t}\n})",
  "view": "Form"
 }
]